# Generated by Django 5.2 on 2025-04-30 02:16

import django.db.models.deletion
import library.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=200)),
                ('isbn', models.PositiveIntegerField()),
                ('description', models.TextField(default='Description')),
                ('publication_date', models.CharField(max_length=200)),
                ('publisher', models.CharField(max_length=200)),
                ('editor', models.CharField(max_length=200)),
                ('edition', models.CharField(max_length=200)),
                ('language', models.CharField(max_length=200)),
                ('pages', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='bookimage/')),
                ('category', models.CharField(max_length=50)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('available_quantity', models.PositiveIntegerField(default=1)),
                ('genres', models.ManyToManyField(to='library.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.CharField(max_length=10)),
                ('branch', models.CharField(max_length=10)),
                ('adm_no', models.CharField(blank=True, default=library.models.return_timestamped_id, max_length=3)),
                ('address', models.CharField(max_length=10)),
                ('email', models.CharField(max_length=10)),
                ('guardian_name', models.CharField(max_length=10)),
                ('guardian_phone', models.CharField(max_length=10)),
                ('phone', models.CharField(blank=True, max_length=10)),
                ('image', models.ImageField(upload_to='images/')),
                ('total_fines', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IssuedBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_status', models.CharField(max_length=14)),
                ('issued_date', models.DateField(auto_now_add=True)),
                ('expiry_date', models.DateField(default=library.models.expiry)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.student')),
            ],
        ),
        migrations.CreateModel(
            name='Hold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.student')),
            ],
            options={
                'ordering': ['place_date'],
                'unique_together': {('book', 'student', 'is_active')},
            },
        ),
    ]
